<?php

/**
 * BaseDerivativeForm
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $description
 * @property boolean $is_infinitive
 * @property integer $base_word_id
 * @property integer $search_count
 * @property Word $BaseWord
 * 
 * @method string         getDescription()   Returns the current record's "description" value
 * @method boolean        getIsInfinitive()  Returns the current record's "is_infinitive" value
 * @method integer        getBaseWordId()    Returns the current record's "base_word_id" value
 * @method integer        getSearchCount()   Returns the current record's "search_count" value
 * @method Word           getBaseWord()      Returns the current record's "BaseWord" value
 * @method DerivativeForm setDescription()   Sets the current record's "description" value
 * @method DerivativeForm setIsInfinitive()  Sets the current record's "is_infinitive" value
 * @method DerivativeForm setBaseWordId()    Sets the current record's "base_word_id" value
 * @method DerivativeForm setSearchCount()   Sets the current record's "search_count" value
 * @method DerivativeForm setBaseWord()      Sets the current record's "BaseWord" value
 * 
 * @package    rechnik
 * @subpackage model
 * @author     borislav
 * @version    SVN: $Id: Builder.php 7200 2010-02-21 09:37:37Z beberlei $
 */
abstract class BaseDerivativeForm extends AbstractWord
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('derivative_form');
        $this->hasColumn('description', 'string', 150, array(
             'type' => 'string',
             'length' => '150',
             ));
        $this->hasColumn('is_infinitive', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('base_word_id', 'integer', 3, array(
             'type' => 'integer',
             'length' => '3',
             ));
        $this->hasColumn('search_count', 'integer', null, array(
             'type' => 'integer',
             'default' => 0,
             ));


        $this->index('name', array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $this->index('search', array(
             'fields' => 
             array(
              0 => 'search_count',
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Word as BaseWord', array(
             'local' => 'base_word_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}